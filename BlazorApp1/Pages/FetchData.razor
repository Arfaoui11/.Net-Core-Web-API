@page "/fetchdata"
@using Service
@using Domain
@inject HttpClient _http
@inject IServiceEntreprise _serviceEntreprise
<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>


@if (_entreprises == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>EntrepriseId</th>
            <th>AdresseEntreprise</th>
            <th>NomEntreprise</th>
            <th>MailEntreprise</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var entreprise in _entreprises)
        {
            <tr>
                <td>@entreprise.AdresseEntreprise</td>
                <td>@entreprise.AdresseEntreprise</td>
                <td>@entreprise.NomEntreprise</td>
                <td>@entreprise.MailEntreprise</td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    
    List<Entreprise> _entreprises = new List<Entreprise>();
   

    protected override async Task OnInitializedAsync()
    {
        var response = await _http.GetAsync("api/Entreprise");
        response.EnsureSuccessStatusCode();
        _entreprises = await response.Content.ReadFromJsonAsync<List<Entreprise>>();
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }

}